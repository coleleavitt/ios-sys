// Note: When building as cdylib for iOS tweaks, we need std
// When building as rlib for embedded use, you can enable no_std
// #![no_std]
#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(dead_code)]
#![allow(improper_ctypes)]

//! Low-level FFI bindings to iOS frameworks and APIs
//!
//! This crate provides raw bindings to **ALL** iOS system frameworks including:
//! - Objective-C runtime
//! - Mach kernel APIs
//! - Foundation framework types
//! - All 197 iOS frameworks (when feature-enabled)
//!
//! # Bindings Generation
//!
//! All bindings are **automatically generated** from the iOS SDK headers using bindgen.
//! The SDK must be present in `submodules/sdks/` (Theos SDK format).
//!
//! # Features
//!
//! - `runtime`: Link against actual iOS frameworks (requires iOS/macOS or cargo-zigbuild)
//! - Individual framework features: `uikit`, `metal`, `webkit`, `avfoundation`, etc.
//!
//! # Build Modes
//!
//! By default, this crate builds in header-only mode, allowing development
//! on any platform. Enable the `runtime` feature to link against actual
//! iOS frameworks.

// Include bindings generated by frameworks.rs from SDK headers

pub mod objc {
    //! Objective-C runtime bindings (auto-generated from objc/runtime.h)
    #![allow(clippy::all)]
    #![allow(warnings)]
    include!(concat!(env!("OUT_DIR"), "/objc.rs"));
}

pub mod mach {
    //! Mach kernel API bindings (auto-generated from mach/*.h)
    #![allow(clippy::all)]
    #![allow(warnings)]
    include!(concat!(env!("OUT_DIR"), "/mach.rs"));
}

pub mod foundation {
    //! Foundation framework type bindings (auto-generated)
    #![allow(clippy::all)]
    #![allow(warnings)]
    include!(concat!(env!("OUT_DIR"), "/foundation.rs"));
}

pub mod corefoundation {
    //! CoreFoundation framework bindings (auto-generated from CoreFoundation/CoreFoundation.h)
    #![allow(clippy::all)]
    #![allow(warnings)]
    include!(concat!(env!("OUT_DIR"), "/corefoundation.rs"));
}

pub mod coregraphics {
    //! CoreGraphics framework bindings (auto-generated from CoreGraphics/CoreGraphics.h)
    #![allow(clippy::all)]
    #![allow(warnings)]
    include!(concat!(env!("OUT_DIR"), "/coregraphics.rs"));
}

// Re-export commonly used types for convenience
pub use objc::{Class, Ivar, Method, SEL};

// ============================================================================
// Public Framework Modules (auto-generated from SDK headers)
// ============================================================================
// All 180+ public framework modules are automatically generated by frameworks.rs
// and included from the OUT_DIR/public_frameworks.rs file

include!(concat!(env!("OUT_DIR"), "/public_frameworks.rs"));

// ============================================================================
// Private Framework Modules (auto-generated from TBD files)
// ============================================================================
// All 1,830+ private framework modules are automatically generated by frameworks.rs
// and included from the OUT_DIR/private_frameworks.rs file

include!(concat!(env!("OUT_DIR"), "/private_frameworks.rs"));
